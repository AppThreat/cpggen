name: Build Windows Binaries

on:
  push:
    branches:
    - main
    tags:
    - 'v*'
  workflow_dispatch:

jobs:
  cpggen-Windows-Build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: Checkout cpggen
      uses: actions/checkout@v3
      with:
        repository: AppThreat/cpggen
        path: cpggen
    - name: Checkout cdxgen
      uses: actions/checkout@v3
      with:
        repository: CycloneDX/cdxgen
        path: cdxgen
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
    - uses: actions/setup-go@v4
      with:
        go-version: '^1.19.7'
    - name: Install pyinstaller
      run: |
        python -m pip install --upgrade pip
        python -m pip install setuptools pyinstaller tzdata poetry
        cd cpggen
        poetry config virtualenvs.create false
        poetry install --no-cache --without dev
    - name: Produce cdxgen pkg
      run: |
        npm install -g pkg
        cd cdxgen
        npm install --omit=dev
        pkg -t node18-win --no-bytecode --no-native-build --compress GZip --public --out-path dist bin/cdxgen
        .\dist\cdxgen.exe --version

    - name: Binary windows build
      run: |
        cd cpggen
        Invoke-WebRequest -Uri 'https://github.com/appthreat/atom/releases/latest/download/atom.zip' -OutFile atom.zip
        pyinstaller cpggen/cli.py --noconfirm --log-level=WARN --nowindow --onefile --name atomgen --add-binary="atom.zip;local_bin" --add-binary="../cdxgen/dist/cdxgen.exe;local_bin" --collect-submodules cpggen --disable-windowed-traceback -i ../bin-build/cpggen.ico --version-file=../bin-build/file_version_info.txt --noupx
        (Get-FileHash .\dist\atomgen.exe).hash | Out-File -FilePath .\dist\atomgen.exe.sha256
        .\dist\atomgen.exe --help
      env:
        PYTHONIOENCODING: utf-8
        LANG: en_US.utf-8
        PYTHONUTF8: 1
    - name: Upload cpggen
      run: |
        cd cpggen\dist
        Invoke-WebRequest -Uri https://github.com/oras-project/oras/releases/download/v1.0.0/oras_1.0.0_windows_amd64.zip -UseBasicParsing -OutFile oras_1.0.0_windows_amd64.zip
        Expand-Archive -Path oras_1.0.0_windows_amd64.zip -DestinationPath .
        .\oras.exe login ghcr.io -u $Env:GITHUB_USERNAME -p $Env:GITHUB_TOKEN
        .\oras.exe push ghcr.io/appthreat/atomgen-windows-bin:v1 --config ../bin-build/config.json:application/vnd.oras.config.v1+json --annotation-file ../bin-build/annotations.json ./atomgen.exe:application/vnd.appthreat.atomgen.layer.v1+tar
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_USERNAME: ${{ github.actor }}

    - name: Binary windows build
      run: |
        cd cpggen
        Invoke-WebRequest -Uri 'https://github.com/appthreat/atom/releases/latest/download/atom.zip' -OutFile atom.zip
        pyinstaller cpggen/cli.py --noconfirm --log-level=WARN --nowindow --onefile --name cpggen --add-binary="atom.zip;local_bin" --add-binary="../cdxgen/dist/cdxgen.exe;local_bin" --collect-submodules cpggen --disable-windowed-traceback -i ../bin-build/cpggen.ico --version-file=../bin-build/file_version_info.txt --noupx
        (Get-FileHash .\dist\cpggen.exe).hash | Out-File -FilePath .\dist\cpggen.exe.sha256
        .\dist\cpggen.exe --help
      env:
        PYTHONIOENCODING: utf-8
        LANG: en_US.utf-8
        PYTHONUTF8: 1
    - name: Upload cpggen
      run: |
        cd cpggen\dist
        .\oras.exe push ghcr.io/appthreat/cpggen-windows-bin:v1 --config ../bin-build/config.json:application/vnd.oras.config.v1+json --annotation-file ../bin-build/annotations.json ./cpggen.exe:application/vnd.appthreat.cpggen.layer.v1+tar
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_USERNAME: ${{ github.actor }}

    - uses: actions/upload-artifact@v1
      if: startsWith(github.ref, 'refs/tags/') != true
      with:
        path: cpggen/dist
        name: cpggen-windows
    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          cpggen/dist/cpggen.exe
          cpggen/dist/cpggen.exe.sha256
